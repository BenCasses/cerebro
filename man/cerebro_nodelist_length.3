\."#############################################################################
\."$Id: cerebro_nodelist_length.3,v 1.1 2005-06-01 16:40:23 achu Exp $
\."#############################################################################
.TH CEREBRO_NODELIST_LENGTH 3 "May 2005" "LLNL" "LIBCEREBRO"
.SH "NAME"
cerebro_nodelist_length, cerebro_nodelist_metric_name,
cerebro_nodelist_metric_type, cerebro_nodelist_find,
cerebro_nodelist_for_each, cerebro_nodelist_destroy,
cerebro_nodelist_iterator_create, cerebro_nodelist_iterator_next,
cerebro_nodelist_iterator_reset, cerebro_nodelist_iterator_at_end,
cerebro_nodelist_iterator_nodename,
cerebro_nodelist_iterator_metric_value,
cerebro_nodelist_iterator_destroy \- cerebro nodelist routines
.SH "SYNOPSIS"
.B #include <cerebro.h>
.sp
.BI "int cerebro_nodelist_length(cerebro_nodelist_t nodelist);
.sp
.BI "char *cerebro_nodelist_metric_name(cerebro_nodelist_t nodelist);
.sp
.BI "int cerebro_nodelist_metric_type(cerebro_nodelist_t nodelist);
.sp
.BI "int cerebro_nodelist_find(cerebro_nodelist_t nodelist, const char *node, void **metric_value, unsigned int *metric_value_size);"
.sp
.BI "int cerebro_nodelist_for_each(cerebro_nodelist_t nodelist, Cerebro_for_each for_each, void *arg);"
.sp
.BI "int cerebro_nodelist_destroy(cerebro_nodelist_t nodelist);"
.sp
.BI "cerebro_nodelist_iterator_t cerebro_nodelist_iterator_create(cerebro_nodelist_t nodelist);"
.sp
.BI "int cerebro_nodelist_iterator_next(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "int cerebro_nodelist_iterator_reset(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "int cerebro_nodelist_iterator_at_end(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "char *cerebro_nodelist_iterator_nodename(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "void *cerebro_nodelist_iterator_metric_value(cerebro_nodelist_iterator_t nodelistItr, unsigned int *metric_value_size);"
.sp
.BI "int cerebro_nodelist_iterator_destroy(cerebro_nodelist_iterator_t nodelistItr);"
.br
.SH "DESCRIPTION"
.br
.SH "RETURN VALUES"
For \fBcerebro_nodelist_length\fR, the length of the list is returned
on success.  On error, -1 is returned.

For \fBcerebro_nodelist_metric_name\fR, the metric name for the
nodelist is returned on success.  On error, -1 is returned.

For \fBcerebro_nodelist_metric_type\fR, the metric type of the list is
returned on success. On error, -1 is returned.

For \fBcerebro_nodelist_find\fR, 1 is returned if the node is found, 0
if not.  On error, -1 is returned.

For \fBcerebro_nodelist_iterator_create\fR, a cerebro nodelist
iterator is returned on success.  On error, NULL is returned.

For \fBcerebro_nodelist_iterator_next\fR, 1 is returned if more data
exists, 0 if not, On error, -1 is returned.

For \fBcerebro_nodelist_iterator_at_end\fR, 1 is returned if the end
of the list has been reached, 0 if not.  On error, -1 is returned.

For \fBcerebro_nodelist_iterator_nodename\fR, a pointer to the
nodename is returned on success.  On error, NULL is returned.

For \fBcerebro_nodelist_iterator_metric_value\fR, a pointer to the
node's metric value is returned on success.  On error, NULL is
returned.

For \fBcerebro_nodelist_for_each\fR, \fBcerebro_nodelist_destroy\fR,
\fBcerebro_nodelist_iterator_reset\fR, and
\fBcerebro_nodelist_iterator_destroy\fR, 0 is returned on success.  On
error -1 is returned.

On errors, an error code is returned in \fInodelist\fR or
\fInodelistItr\fR.  The error code can be retrieved via
.BR cerebro_nodelist_errnum(3) or
.BR cerebro_nodelist_iterator_errnum(3) respectively
, and a description of the error code can be retrieved via
.BR cerebro_strerror(3).  
.br
.SH "ERRORS"
.TP
.B CEREBRO_ERR_NULLHANDLE
The handle parameter is NULL.  The cerebro_t handle must be created
with
.BR cerebro_handle_create(3).
.TP
.B CEREBRO_ERR_MAGIC_NUMBER
\fIhandle\fR has an incorrect magic number.  \fIhandle\fR does not
point to a cerebro_t handle or \fIhandle\fR has already been
destroyed.
.TP
.B CEREBRO_ERR_PARAMETERS
Invalid parameter passed in.
.TP
.B CEREBRO_ERR_OVERFLOW
Buffer overflow.
.TP
.B CEREBRO_ERR_INTERNAL
An internal system error occurred.
.br
.SH "FILES"
/usr/include/cerebro.h
.SH "SEE ALSO"
cerebro_updown_up_nodes_iterator(3),
cerebro_updown_down_nodes_iterator(3), cerebro_errnum(3),
cerebro_strerror(3)
