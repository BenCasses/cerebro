\."#############################################################################
\."$Id: cerebro_nodelist_metric_name.3,v 1.3 2005-06-07 17:26:50 achu Exp $
\."#############################################################################
.TH CEREBRO_NODELIST_METRIC_NAME 3 "May 2005" "LLNL" "LIBCEREBRO"
.SH "NAME"
cerebro_nodelist_metric_name, cerebro_nodelist_length,
cerebro_nodelist_find, cerebro_nodelist_for_each,
cerebro_nodelist_destroy, cerebro_nodelist_iterator_create,
cerebro_nodelist_iterator_next, cerebro_nodelist_iterator_reset,
cerebro_nodelist_iterator_at_end, cerebro_nodelist_iterator_nodename,
cerebro_nodelist_iterator_metric_value,
cerebro_nodelist_iterator_destroy \- cerebro nodelist routines
.SH "SYNOPSIS"
.B #include <cerebro.h>
.sp
.B "typedef int (*Cerebro_for_each)(char *nodename, unsigned int metric_value_type, unsigned int metric_value_len, void *metric_value, void *arg);"
.sp
.BI "char *cerebro_nodelist_metric_name(cerebro_nodelist_t nodelist);
.sp
.BI "int cerebro_nodelist_length(cerebro_nodelist_t nodelist);
.sp
.BI "int cerebro_nodelist_find(cerebro_nodelist_t nodelist, const char *node, unsigned int *metric_value_type, unsigned int *metric_value_size, void **metric_value);"
.sp
.BI "int cerebro_nodelist_for_each(cerebro_nodelist_t nodelist, Cerebro_for_each for_each, void *arg);"
.sp
.BI "int cerebro_nodelist_destroy(cerebro_nodelist_t nodelist);"
.sp
.BI "cerebro_nodelist_iterator_t cerebro_nodelist_iterator_create(cerebro_nodelist_t nodelist);"
.sp
.BI "int cerebro_nodelist_iterator_nodename(cerebro_nodelist_iterator_t nodelistItr, char **nodename);"
.sp
.BI "int cerebro_nodelist_iterator_metric_value(cerebro_nodelist_iterator_t nodelistItr, unsigned int *metric_value_type, unsigned int *metric_value_size, void **metric_value);"
.sp
.BI "int cerebro_nodelist_iterator_next(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "int cerebro_nodelist_iterator_reset(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "int cerebro_nodelist_iterator_at_end(cerebro_nodelist_iterator_t nodelistItr);"
.sp
.BI "int cerebro_nodelist_iterator_destroy(cerebro_nodelist_iterator_t nodelistItr);"
.br
.SH "DESCRIPTION"
\fBcerebro_nodelist_metric_name\fR retreives the metric name used to
retrieve the nodelist data.

\fBcerebro_nodelist_length\fR retrieves the number of nodes stored in
the nodelist.

\fBcerebro_nodelist_find\fR determines if \fInode\fR exists in the
nodelist.  If a value exists for the node, the metric type, metric
value length, and metric value are returned in 'metric_value_type',
'metric_value_len', and 'metric_value' respectively.

\fBcerebro_nodelist_for_each\fR calls the function \fIfor_each\fR for
each node and value stored in the nodelist.

\fBcerebro_nodelist_destroy\fR destroys the cerebro nodelist pointed
by \fInodelist\fR.  All nodelist iterators created using the indicated
nodelist will also be destroyed.

\fBcerebro_nodelist_iterator_create\fR creates a cerebro nodelist iterator.

\fBcerebro_nodelist_iterator_nodename\fR returns the nodename of the
current node pointed at in the iterator.

\fBcerebro_nodelist_iterator_metric_value\fR returns the metric type,
metric value length, and metric value of the current data pointed at
in the iterator.  The values are returned in 'metric_value_type',
'metric_value_len', and 'metric_value' respectively.

\fBcerebro_nodelist_iterator_next\fR moves the iterator pointer forward.

\fBcerebro_nodelist_iterator_reset\fR resets the iterator pointer back
to the beginning.

\fBcerebro_nodelist_iterator_at_end\fR returns a flag indicating if
the end of the nodelist has been reached.

\fBcerebro_nodelist_iterator_destroy\fR destroys the cerebro nodelist
iterator pointed by \fInodelistItr\fR.

.br
.SH "RETURN VALUES"
For \fBcerebro_nodelist_metric_name\fR, the metric name for the
nodelist is returned on success.  On error, -1 is returned.

For \fBcerebro_nodelist_length\fR, the length of the list is returned
on success.  On error, -1 is returned.

For \fBcerebro_nodelist_find\fR, 1 is returned if the node is found, 0
if not.  On error, -1 is returned.

For \fBcerebro_nodelist_iterator_create\fR, a cerebro nodelist
iterator is returned on success.  On error, NULL is returned.

For \fBcerebro_nodelist_iterator_next\fR, 1 is returned if more data
exists, 0 if not, On error, -1 is returned.

For \fBcerebro_nodelist_iterator_at_end\fR, 1 is returned if the end
of the list has been reached, 0 if not.  On error, -1 is returned.

For \fBcerebro_nodelist_for_each\fR, \fBcerebro_nodelist_destroy\fR,
\fBcerebro_nodelist_iterator_nodename\fR,
\fBcerebro_nodelist_iterator_metric_value\fR
\fBcerebro_nodelist_iterator_reset\fR, and
\fBcerebro_nodelist_iterator_destroy\fR, 0 is returned on success.  On
error -1 is returned.

On errors, an error code is returned in \fInodelist\fR or
\fInodelistItr\fR.  The error code can be retrieved via
.BR cerebro_nodelist_errnum(3) or
.BR cerebro_nodelist_iterator_errnum(3) respectively
, and a description of the error code can be retrieved via
.BR cerebro_strerror(3).  
.br
.SH "ERRORS"
.TP
.B CEREBRO_ERR_NULLNODELIST
The \fInodelist\fR parameter is NULL.
.B CEREBRO_ERR_NULLITERATOR
The \fInodelistItr\fR parameter is NULL.
.TP
.B CEREBRO_ERR_MAGIC_NUMBER
\fInodelist\fR or \fInodelistItr\fR has an incorrect magic number.
\fInodelist\fR or \fInodelistItr\fR does not point to a an appropriate
structure or has already been destroyed.
.TP
.B CEREBRO_ERR_PARAMETERS
Invalid parameter passed in.
.TP
.B CEREBRO_ERR_END_OF_LIST
The end of the list has been reached.
.TP
.B CEREBRO_ERR_OUTMEM
Out of memory.
.TP
.B CEREBRO_ERR_INTERNAL
An internal system error occurred.
.br
.SH "FILES"
/usr/include/cerebro.h
.SH "SEE ALSO"
cerebro_errnum(3), cerebro_strerror(3)
