Documention
- cerebro.1 manpage

Testing
- fd leaking
- mem-leaking
- api again

Cleanup
- cleanup module loading stuff
- new module documentation
  - and various updates
- more statically compiled in libraries to reduce virt/res size?
  - wrappers lib
  - modules lib
- metric modules can provide multiple metrics??
- module returns pointer/buffer
  - and offer destroy function, so module need not malloc, could
    pointer to static buffer instead.

Audit
- code review to reduce memory footprint

Portability
- IPv6
- Non-pthreads support

Design
- error output tricks like %m in pdsh, to save lines
- Update time for each cerebro metric data?
- behavior on module loading/read/get
  - total fail, or only fail on one module
  - inconsistency between module types??
  - need module library to return module_info pointers??
- thread safeness in monitor modules?
- ability for data to be stored/not-stored in the internal hash
  i.e. passed directly to module and forgotten
- speaker scheduler??
  - rework monitor module??
- listening module
- Data structure for list/index combination?
- Move pthread_lock in cerebro_error to error lib??
- metric to get available metrics
- make cerebro calls pthread safe??
- update thread for monitor module
- nodelist
  - use own list instead of 'List' to store iterators?
- how remove metric data?
  - Behlendo Request: Way to force most up to date data
  - Will require speaker to listen for "control" packets.
- strerror_r and errormsg_r funcs
- libcerebro set configfile, module, etc. functions
- generic err message buffer in cerebro_t handle, i.e for conffile errors
- pthreads locking for clusterlists/config modules?? (they are read only)
- service up/down detection

Before distribution
- devel package?

GPL
- do it
- place header on all headers
- place on all c files
- note on manpage ORIGINS

Before public release
- untabify

Misc
- remove hash/list buffering in list.c hash.c?
